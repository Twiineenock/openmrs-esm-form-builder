name: PR Title Checker

on:
  pull_request:
    types: [opened, edited, reopened, synchronize]

jobs:
  validate-title:
    runs-on: ubuntu-latest
    steps:
      - name: Check PR Title Format
        uses: actions/github-script@v6
        with:
          script: |
            const title = context.payload.pull_request.title.trim();
            
            // Define valid patterns
            const validPatterns = [
              // Pattern 1: (type) O3-XXXX: Description
              /^\((docs|test|chore|fix|feat|refactor)\)\s+(O3-\d+):\s+.+$/,
              // Pattern 2: (type) Description
              /^\((docs|test|chore|fix|feat|refactor)\)\s+[^ ].+$/,
              // Pattern 3: type: O3-XXXX: Description
              /^(docs|test|chore|fix|feat|refactor):\s+(O3-\d+):\s+.+$/,
              // Pattern 4: type: Description
              /^(docs|test|chore|fix|feat|refactor):\s+[^ ].+$/,
              // Pattern 5: type O3-XXXX: Description
              /^(docs|test|chore|fix|feat|refactor)\s+(O3-\d+):\s+.+$/,
              // Pattern 6: type Description
              /^(docs|test|chore|fix|feat|refactor)\s+[^ ].+$/,
              // Pattern 7: BREAKING: O3-XXXX: Description
              /^BREAKING:\s+(O3-\d+):\s+.+$/,
              // Pattern 8: BREAKING: Description
              /^BREAKING:\s+[^ ].+$/
            ];

            // Check if title matches any valid pattern
            const isValid = validPatterns.some(pattern => pattern.test(title));
            
            if (!isValid) {
              core.setFailed(`Invalid PR title format. Must follow one of these patterns:
              
              With ticket reference:
              - "(feat) O3-1234: Description"
              - "feat: O3-1234: Description"
              - "feat O3-1234: Description"
              - "BREAKING: O3-1234: Description"
              
              Without ticket reference:
              - "(feat) Description"
              - "feat: Description"
              - "feat Description"
              - "BREAKING: Description"
              
              Notes:
              - "O3" must use uppercase letter O (not zero or lowercase)
              - Ticket numbers must be 4+ digits (O3-1234)
              - Must include a description after the prefix`);
            }

            // Additional strict check for O3 format
            const ticketMatch = title.match(/(o3|03|O3)-\d+/);
            if (ticketMatch) {
              const ticketRef = ticketMatch[0];
              if (ticketRef.startsWith('o3')) {
                core.setFailed('Ticket reference must use uppercase O (O3) not lowercase (o3)');
              } else if (ticketRef.startsWith('03')) {
                core.setFailed('Ticket reference must use uppercase O (O3) not zero (03)');
              } else if (!/:/.test(title.split(ticketRef)[1])) {
                core.setFailed('Ticket reference must be followed by a colon (O3-1234:)');
              }
            }